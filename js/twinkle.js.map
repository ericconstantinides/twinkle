{"version":3,"sources":["twinkle.js"],"names":["DEFAULT_SPEED","twinkleContainers","shuffle","array","counter","length","index","Math","floor","random","temp","shuffle2","Twinkle","twinkleEl","twinklesImages","twinklesToReveal","twinkleSpeed","twinklePosition","twinkleSlotOrder","Array","from","v","i","html","placeHolder","document","createElement","classList","add","setAttribute","innerHTML","outerHTML","thisTwinkle","incomingSlot","transitionSlot","deleteSlot","window","setInterval","activeTwinkle","remove","children","removeChild","init","twinkleEls","getElementsByClassName","getAttribute","twinkle","firstChild","placeImages","goLive","push","forEach","goTwinkle"],"mappings":"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","file":"twinkle.js","sourcesContent":["!function() {\n  const DEFAULT_SPEED = 1000;\n  var twinkleContainers = [];\n\n  function shuffle(array) {\n    let counter = array.length;\n    // While there are elements in the array\n    while (counter > 0) {\n      // Pick a random index\n      let index = Math.floor(Math.random() * counter);\n      // Decrease counter by 1\n      counter--;\n      // And swap the last element with it\n      let temp = array[counter];\n      array[counter] = array[index];\n      array[index] = temp;\n    }\n    return array;\n  }\n\n  var shuffle2 = function() {\n    let counter = this.length;\n    // While there are elements in the this\n    while (counter > 0) {\n      // Pick a random index\n      let index = Math.floor(Math.random() * counter);\n      // Decrease counter by 1\n      counter--;\n      // And swap the last element with it\n      let temp = this[counter];\n      this[counter] = this[index];\n      this[index] = temp;\n    }\n  };\n\n  class Twinkle {\n    constructor(twinkleEl, twinklesImages, twinklesToReveal, twinkleSpeed) {\n      this.twinkleEl = twinkleEl;\n      if (twinklesToReveal > twinklesImages.length - 1 || twinklesToReveal === null) {\n        this.twinklesToReveal = twinklesImages.length - 1;\n      } else {\n        this.twinklesToReveal = twinklesToReveal;\n      }\n      this.twinklesImages = twinklesImages;\n      this.twinklePosition = 0;\n      this.twinkleSpeed = twinkleSpeed === null ? DEFAULT_SPEED : twinkleSpeed;\n      this.twinkleSlotOrder = shuffle(Array.from({length: this.twinklesToReveal}, (v,i) => i));\n      this.twinklesImages = shuffle([...this.twinklesImages]);\n    }\n    // placeImages creates the containers and installs the first images:\n    placeImages() {\n      let html = '';\n      for (let i = 0; i < this.twinklesToReveal; i++) {\n        let placeHolder = document.createElement('article');\n        placeHolder.classList.add('js-twinkle__item');\n        placeHolder.setAttribute('style','order:'+ this.twinkleSlotOrder[i]);\n        this.twinklesImages[i].classList.add('on');\n        placeHolder.innerHTML = this.twinklesImages[i].outerHTML;\n        html += placeHolder.outerHTML;\n\n        // take the twinkle out of the front and put it in the back\n        this.twinklePosition++;\n      }\n      // attach the whole thing back to the dom:\n      this.twinkleEl.innerHTML = html;\n    }\n\n    goLive() {\n      this.twinkleEl.classList.add('is-loaded');\n    }\n\n    goTwinkle() {\n      // there are 4 twinkle states:\n      // 1) inactive\n      // 2) active\n      // 3) incoming\n      // 4) outgoing\n      // 1) inactive (again)\n      // these states are animated using css\n      var thisTwinkle = this;\n      var incomingSlot = 0; // incoming slot starts at slot 0\n      var transitionSlot = -1;\n      var deleteSlot = -2;\n\n      window.setInterval(function () {\n\n        // make the incoming one have the correct class:\n        let activeTwinkle = thisTwinkle.twinklesImages[thisTwinkle.twinklePosition];\n        activeTwinkle.classList.remove('on');\n        activeTwinkle.classList.add('incoming');\n        thisTwinkle.twinkleEl.children[incomingSlot].innerHTML = activeTwinkle.outerHTML + thisTwinkle.twinkleEl.children[incomingSlot].innerHTML;\n\n        if (transitionSlot >= 0) {\n          thisTwinkle.twinkleEl.children[transitionSlot].children[0].classList.remove('incoming');\n          thisTwinkle.twinkleEl.children[transitionSlot].children[0].classList.add('on');\n\n          thisTwinkle.twinkleEl.children[transitionSlot].children[1].classList.remove('on');\n          thisTwinkle.twinkleEl.children[transitionSlot].children[1].classList.add('outgoing');\n        }\n\n        if (deleteSlot >= 0) {\n          thisTwinkle.twinkleEl.children[deleteSlot].removeChild(thisTwinkle.twinkleEl.children[deleteSlot].children[1]);\n          deleteSlot = transitionSlot;\n        } else {\n          // ratchet up the delete slot until the 3rd iteration to start deleting\n          deleteSlot++;\n        }\n\n        // build the stuff for the next go'round\n        transitionSlot = incomingSlot;\n\n        // Move the twinkle Position\n        thisTwinkle.twinklePosition = thisTwinkle.twinklePosition < (thisTwinkle.twinklesImages.length - 1) ? thisTwinkle.twinklePosition + 1 : thisTwinkle.twinklePosition = 0;\n        // either reset or continue the slot position:\n        incomingSlot = incomingSlot < (thisTwinkle.twinklesToReveal - 1) ? incomingSlot + 1 : incomingSlot = 0;\n\n      }, thisTwinkle.twinkleSpeed); // repeat forever\n    }\n  }\n\n  var init = function() {\n    let twinkleEls = document.getElementsByClassName('js-twinkle');\n    for (let twinkleEl of twinkleEls) {\n      // statements\n      let twinklesToReveal = twinkleEl.getAttribute('data-js-twinkle-reveal');\n      let twinkleSpeed = twinkleEl.getAttribute('data-js-twinkle-speed');\n      let twinkle = new Twinkle(twinkleEl, twinkleEl.children, twinklesToReveal, twinkleSpeed);\n\n      // delete the original children\n      while (twinkleEl.firstChild) { twinkleEl.removeChild(twinkleEl.firstChild); }\n\n      twinkle.placeImages();\n      twinkle.goLive();\n\n      // add the twinkleEls to the array\n      twinkleContainers.push(twinkle);\n    }\n  }\n  init();\n  twinkleContainers.forEach( twinkle => twinkle.goTwinkle() );\n}();"],"sourceRoot":"twinkle/src/scripts"}